apiVersion: v1
kind: Service
metadata:
  name: redis-server
spec:
  selector:
    app: redis-host
  ports:
  - port: 6379
    targetPort: 6379

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-host
spec:
  replicas: 2
  selector:
    matchLabels:
      app: redis-host
  template:
    metadata:
      labels:
        app: redis-host
    spec:
      containers:
      - name: redis-host
        image: redis
        resources:
          limits:
            memory: "128Mi"
            cpu: "250m"
        ports:
        - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: root-svc
spec:
#  type: NodePort
  selector:
    app: root-app
  ports:
  - port: 80
    targetPort: 80

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: root-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: root-app
  template:
    metadata:
      labels:
        app: root-app
    spec:
      containers:
      - name: root-app
        image: 3ido0/pub-images:root-svc
        resources:
          limits:
            memory: "128Mi"
            cpu: "250m"
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: req-svc
spec:
  selector:
    app: req-app
  ports:
  - port: 81
    targetPort: 81

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: req-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: req-app
  template:
    metadata:
      labels:
        app: req-app
    spec:
      containers:
      - name: root-app
        image: 3ido0/pub-images:req-svc
        resources:
          limits:
            memory: "128Mi"
            cpu: "250m"
        ports:
        - containerPort: 81
---
apiVersion: v1
kind: Service
metadata:
  name: qu-svc
spec:
  selector:
    app: qu-app
  ports:
  - port: 82
    targetPort: 82

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: qu-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: qu-app
  template:
    metadata:
      labels:
        app: qu-app
    spec:
      containers:
      - name: qu-app
        image: 3ido0/pub-images:qu-svc
        resources:
          limits:
            memory: "128Mi"
            cpu: "250m"
        ports:
        - containerPort: 82
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: microsvc-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  rules:
   - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: root-svc
            port: 
              number: 80
      - path: /requests
        pathType: Prefix
        backend:
          service:
            name: req-svc
            port: 
              number: 81
      - path: /queries
        pathType: Prefix
        backend:
          service:
            name: qu-svc
            port: 
              number: 82
